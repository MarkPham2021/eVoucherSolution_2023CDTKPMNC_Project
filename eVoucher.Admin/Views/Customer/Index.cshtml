@using eVoucher_DTO.Models;
@using eVoucher_Utility.Enums
@model eVoucher_ViewModel.Response.PageResult<Customer>
@{
    ViewData["Title"] = "Our Customers";
}
<div class="container-fluid">
    <form asp-controller="Customer" asp-action="Index" method="get">
        <div class="row my-3">
            <div class="form-group col-lg-4 col-md-4">
                <div class="form-check-inline">
                    <label class="radio inline mx-3">
                        <input type="radio" name="accountStatus" value="@ActiveStatus.AllStatus" checked>
                        <span class="text-black  text-lg-center fw-bold"> All status </span>
                    </label>
                    <label class="radio inline mx-3">
                        <input type="radio" name="accountStatus" value="@ActiveStatus.Active">
                        <span class="text-black text-lg-center fw-bold"> Active </span>
                    </label>
                    <label class="radio inline mx-3">
                        <input type="radio" name="accountStatus" value="@ActiveStatus.InActive">
                        <span class="text-black text-lg-center fw-bold"> InActive </span>
                    </label>
                </div>
            </div>
            <div class="col-lg-3 col-md-3">
                <button type="submit" class="form-control btn btn-primary float-start">View</button>
            </div>
        </div>
    </form>
    <div class="row container-fluid fw-bold">
        <div class="col-2 rounded-1 border border-1 align-content-center">
            <span>Name</span>
        </div>
        <div class="col-2 rounded-1 border border-1 align-content-center">
            <span>UserName</span>
        </div>
        <div class="col-1 rounded-1 border border-1 align-content-center">
            <span>Date of birth</span>
        </div>
        <div class="col-1 rounded-1 border border-1 align-content-center">
            <span>Gender</span>
        </div>
        <div class="col-1 rounded-1 border border-1 align-content-center">
            <span>Phone</span>
        </div>
        <div class="col-2 rounded-1 border border-1 align-content-center">
            <span>Email</span>
        </div>
        <div class="col-1 rounded-1 border border-1 align-content-center">
            <span>Status</span>
        </div>
        <div class="col-2 rounded-1 border border-1 align-content-center">
            <span>Action</span>
        </div>
    </div>
    @foreach (var item in Model.Items)
    {
        <div class="row container-fluid">
            <div class="col-2 rounded-1 border border-1">
                <span>@item.Name</span>
            </div>
            <div class="col-2 rounded-1 border border-1 align-content-center">
                <span>@item.AppUsers.UserName</span>
            </div>
            <div class="col-1 rounded-1 border border-1 align-content-center">
                <span>@item.DOB.ToShortDateString()</span>
            </div>
            <div class="col-1 rounded-1 border border-1">
                <span>@item.Gender</span>
            </div>
            <div class="col-1 rounded-1 border border-1">
                <span>@item.AppUsers.PhoneNumber</span>
            </div>
            <div class="col-2 rounded-1 border border-1">
                <span>@item.AppUsers.Email</span>
            </div>
            <div class="col-1 rounded-1 border border-1">
                <span>@item.Status</span>
            </div>
            <div class="col-2 rounded-1 border border-1">
                <p>
                    @Html.ActionLink("Detail", "ViewDetail", new { id = item.Id },new {@class ="text-white fw-bold bg-success "}) |
                    @Html.ActionLink("Activate", "Activate", new { id = item.Id },new {@class ="text-white fw-bold bg-primary "}) |
                    @Html.ActionLink("Lock", "Lock", new { id = item.Id },new {@class ="text-white fw-bold bg-danger"} )
                </p>
            </div>
        </div>
    }
    @await Component.InvokeAsync("Pager", Model)
</div>



